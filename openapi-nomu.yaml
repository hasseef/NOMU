openapi: 3.0.3
info:
  title: NOMU Platform API
  version: 0.2.0
  description: >
    واجهات أولية لمنصة نمو — تغطي المصادقة، الأطفال، الفحوصات، الإحالات، التعليم، المحفظة، ومؤشرات الأداء.
servers:
  - url: https://api.nomu.sa/v1
tags:
  - name: Auth
  - name: Children
  - name: Health
  - name: Education
  - name: Referrals
  - name: Wallet
  - name: KPIs
paths:
  /auth/login:
    post:
      tags: [Auth]
      summary: تسجيل دخول
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username: { type: string }
                password: { type: string }
      responses:
        '200':
          description: نجاح
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: { type: string }
                  role: { type: string, enum: [guest,family,health,edu,ngo,csr,national] }
  /children:
    get:
      tags: [Children]
      summary: قائمة الأطفال
      parameters:
        - in: query
          name: region
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Child' }
    post:
      tags: [Children]
      summary: إنشاء سجل طفل
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Child' }
      responses: { '201': { description: Created } }
  /children/{id}:
    get:
      tags: [Children]
      summary: قراءة طفل
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content: { application/json: { schema: { $ref: '#/components/schemas/Child' } } }
    patch:
      tags: [Children]
      summary: تحديث جزئي
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content: { application/json: { schema: { type: object } } }
      responses: { '200': { description: Updated } }
  /health/screenings:
    get:
      tags: [Health]
      summary: البحث في الفحوصات
      parameters:
        - in: query
          name: type
          schema: { type: string, enum: [newborn_hearing, metabolic, developmental, vision] }
        - in: query
          name: childId
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Screening' }
    post:
      tags: [Health]
      summary: تسجيل فحص صحي
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Screening' }
      responses: { '201': { description: Created } }
  /education/kindergartens/enrollments:
    get:
      tags: [Education]
      summary: الاستعلام عن الالتحاق برياض الأطفال
      parameters:
        - in: query
          name: region
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/KGEnrollment' }
    post:
      tags: [Education]
      summary: تسجيل التحاق طفل بالروضة
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/KGEnrollment' }
      responses: { '201': { description: Created } }
  /referrals:
    get:
      tags: [Referrals]
      summary: البحث في الإحالات
      parameters:
        - in: query
          name: status
          schema: { type: string, enum: [open,processing,closed] }
        - in: query
          name: region
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Referral' }
    post:
      tags: [Referrals]
      summary: فتح إحالة
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Referral' }
      responses: { '201': { description: Created } }
  /referrals/{id}:
    patch:
      tags: [Referrals]
      summary: تحديث حالة الإحالة
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status: { type: string, enum: [open,processing,closed] }
      responses: { '200': { description: Updated } }
  /wallet/entries:
    get:
      tags: [Wallet]
      summary: إدخالات المحفظة
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/WalletEntry' }
    post:
      tags: [Wallet]
      summary: إضافة إدخال محفظة
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/WalletEntry' }
      responses: { '201': { description: Created } }
  /kpis:
    get:
      tags: [KPIs]
      summary: مؤشرات الأداء حسب المنطقة والفترة
      parameters:
        - in: query
          name: region
          schema: { type: string }
        - in: query
          name: period
          schema: { type: string, enum: ['7d','30d','90d','1y'] }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KPISet'
components:
  schemas:
    Child:
      type: object
      required: [id, familyId, name, birthDate, region]
      properties:
        id: { type: string }
        familyId: { type: string }
        name: { type: string }
        gender: { type: string, enum: [M,F] }
        birthDate: { type: string, format: date }
        region: { type: string }
        screenings:
          type: array
          items: { $ref: '#/components/schemas/Screening' }
    Screening:
      type: object
      properties:
        id: { type: string }
        childId: { type: string }
        type: { type: string, enum: [newborn_hearing, metabolic, developmental, vision] }
        date: { type: string, format: date }
        result: { type: string }
    KGEnrollment:
      type: object
      properties:
        id: { type: string }
        childId: { type: string }
        kindergartenId: { type: string }
        date: { type: string, format: date }
        specialNeeds: { type: boolean }
    Referral:
      type: object
      required: [id, type, status, region]
      properties:
        id: { type: string }
        child: { type: string }
        type: { type: string, enum: [health, early0_3, education, family_support] }
        status: { type: string, enum: [open,processing,closed] }
        createdAt: { type: string, format: date-time }
        region: { type: string }
    KPISet:
      type: object
      properties:
        coverage0_6: { type: number }
        immunization: { type: number }
        readiness: { type: number }
        referralsMedianHours: { type: number }
        kgEnrollment: { type: number }
        familyRecordCompleteness: { type: number }
    WalletEntry:
      type: object
      required: [id, source, amount, date, tag]
      properties:
        id: { type: string }
        source: { type: string }
        amount: { type: number }
        date: { type: string, format: date }
        tag: { type: string, enum: [CSR,Grant,Donation,Other] }
